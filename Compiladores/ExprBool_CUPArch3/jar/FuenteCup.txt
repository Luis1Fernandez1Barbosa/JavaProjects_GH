package fes.aragon.compilador;
import java_cup.runtime.*;
import java.io.*;
import java.util.*;

action code{:
	
	public void imprimirValor(String str){
		System.out.println("Valor del token es: "+str);
	}
:};

parser code{:
	public static TablaSimbolos tabla = new TablaSimbolos();
	public static Lexico lex;
	private ArrayList<String> datos=new ArrayList<String>();
	public parser parserFuente;
   	
   	public ArrayList<String> codIntermedio(){
   		return datos;
   	}
	public void syntax_error(Symbol st){
		System.out.println("Error en la linea "+ lex.getYyline() +
                    " columna: "+ lex.getYy_currentPos());
	}
	public void cargar(String archivo,TablaSimbolos t) throws Exception{	
		lex=new Lexico(new FileInputStream(new File(archivo)),t);
		parserFuente=new parser(lex);
		parserFuente.parse();
	}
	
:};


terminal PUNTOYCOMA, OR, AND, NOT, TRUE, FALSE;
terminal LPAREN, RPAREN, ASIG;
terminal Datos ID;

non terminal expr_lista,expr_parte;
non terminal asig;
non terminal Boolean expr;

precedence left PUNTOYCOMA, OR, AND, NOT;

expr_lista ::= expr_lista expr_parte
		|expr_lista asig PUNTOYCOMA		
		|expr_parte
		|asig PUNTOYCOMA
		|error {:;:};
expr_parte ::=expr:e PUNTOYCOMA
	{:
            System.out.println("Resultado es: "+ e);
            parser.codIntermedio().add(String.valueOf(e));
            imprimirValor(String.valueOf(e));
        :};
asig ::= ID:s ASIG expr:e 
        {:
            RESULT=e; 
           	parser.codIntermedio().add(String.valueOf(e));
            s.setValor(String.valueOf(e));
	:}
	|ID:s ASIG asig:e 
        {:
            RESULT=e;
            parser.codIntermedio().add(String.valueOf(e));
            s.setValor(String.valueOf(e));
	:};			
expr ::=expr:e1 OR expr:e2 {:RESULT = e1 || e2;:}
		| expr:e1 AND expr:e2 {:RESULT = e1 && e2;:}
		| NOT expr:e1 {:RESULT = !e1;:}
		| LPAREN expr:e RPAREN {:RESULT = e;:}
		| TRUE:n {:RESULT=new Boolean(true);:}
		| FALSE:n {:RESULT=new Boolean(false);:}
	| ID:s 
        {:
            System.out.println("Valor en tabla: "+s.getValor());
            RESULT=Boolean.valueOf(s.getValor());
        :};